{"ast":null,"code":"import { createServer } from \"miragejs\";\n\nvar db = require(\"../Data/db\");\n\nexport function makeServer() {\n  if (window.server) {\n    server.shutdown();\n  }\n\n  window.server = createServer({\n    routes: function routes() {\n      this.get(\"/api/employees\", function (schema, req) {\n        console.log(req);\n        return db;\n      });\n      this.post(\"/users\", function (schema, request) {\n        var attrs = JSON.parse(request.requestBody);\n        attrs.id = newId++;\n        return schema.users.create(attrs);\n      });\n    }\n  });\n  return window.server;\n}","map":{"version":3,"sources":["C:/Users/User/Documents/EmployeeManagement/server/serverMirage.js"],"names":["createServer","db","require","makeServer","window","server","shutdown","routes","get","schema","req","console","log","post","request","attrs","JSON","parse","requestBody","id","newId","users","create"],"mappings":"AACA,SAASA,YAAT,QAA6B,UAA7B;;AACA,IAAMC,EAAE,GAAGC,OAAO,cAAlB;;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,MAAIC,MAAM,CAACC,MAAX,EAAmB;AACfA,IAAAA,MAAM,CAACC,QAAP;AACH;;AAGDF,EAAAA,MAAM,CAACC,MAAP,GAAgBL,YAAY,CAAC;AAEzBO,IAAAA,MAFyB,oBAEhB;AACL,WAAKC,GAAL,CAAS,gBAAT,EAA2B,UAACC,MAAD,EAASC,GAAT,EAAiB;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOT,EAAP;AACH,OAHD;AAKA,WAAKY,IAAL,CAAU,QAAV,EAAoB,UAACJ,MAAD,EAASK,OAAT,EAAqB;AACrC,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,WAAnB,CAAd;AACAH,QAAAA,KAAK,CAACI,EAAN,GAAWC,KAAK,EAAhB;AAEA,eAAOX,MAAM,CAACY,KAAP,CAAaC,MAAb,CAAoBP,KAApB,CAAP;AACH,OALD;AAOH;AAfwB,GAAD,CAA5B;AAiBA,SAAOX,MAAM,CAACC,MAAd;AACH","sourcesContent":["\r\nimport { createServer } from \"miragejs\"\r\nconst db = require('../Data/db');\r\n\r\nexport function makeServer() {\r\n    if (window.server) {\r\n        server.shutdown()\r\n    }\r\n\r\n    //miragejs\r\n    window.server = createServer({\r\n\r\n        routes() {\r\n            this.get(\"/api/employees\", (schema, req) => {\r\n                console.log(req);\r\n                return db;\r\n            });\r\n\r\n            this.post(\"/users\", (schema, request) => {\r\n                const attrs = JSON.parse(request.requestBody);\r\n                attrs.id = newId++\r\n\r\n                return schema.users.create(attrs);\r\n            });\r\n\r\n        },\r\n    })\r\n    return window.server;\r\n}"]},"metadata":{},"sourceType":"module"}