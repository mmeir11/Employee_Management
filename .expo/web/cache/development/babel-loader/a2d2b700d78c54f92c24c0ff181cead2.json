{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\EmployeeManagement\\\\screens\\\\EmployeeDetailsScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as firebase from 'firebase';\nimport ExpoStatusBar from 'expo-status-bar/build/ExpoStatusBar';\nimport * as Facebook from 'expo-facebook';\nimport Colors from \"../constant/Colors\";\n\nvar EmployeeDetailsScreen = function EmployeeDetailsScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeName = _useState2[0],\n      setEmployeeName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      employeeAge = _useState4[0],\n      setEmployeeAge = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      employeeSalary = _useState6[0],\n      setEmployeeSalary = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employeeId = _useState8[0],\n      setEmployeeId = _useState8[1];\n\n  useEffect(function () {\n    if (props.route.params.employee) {\n      var currentEmployee = props.route.params.employee;\n      console.log(\"currentEmployee\", currentEmployee.employee_name);\n      setEmployeeName(currentEmployee.employee_name);\n      setEmployeeAge(currentEmployee.employee_age);\n      setEmployeeSalary(currentEmployee.employee_salary);\n      setEmployeeId(currentEmployee.id);\n    }\n  }, []);\n\n  var generateID = function generateID(pre) {\n    return pre + \"_\" + new Date().getTime();\n  };\n\n  var onConfirmHandler = function onConfirmHandler() {\n    var id, currentEmployee;\n    return _regeneratorRuntime.async(function onConfirmHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!employeeName || !employeeAge || !employeeSalary)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"שגיאה\", \"נא מלא את כל פרטי העובד\", [{\n              text: \"אישור\"\n            }], {\n              cancelable: true\n            }));\n\n          case 2:\n            if (!employeeId) {\n              id = generateID(employeeName);\n              console.log(\"id\", id);\n              setEmployeeId(id);\n            }\n\n            currentEmployee = {\n              employee_name: employeeName,\n              employee_age: employeeAge,\n              employee_salary: employeeSalary,\n              id: employeeId\n            };\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(props.route.params.onConfirm(currentEmployee));\n\n          case 6:\n            props.navigation.goBack();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Pressable, {\n    style: styles.root,\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addEmployeeModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, props.route.params.title), React.createElement(TextInput, {\n    placeholder: \"\\u05E9\\u05DD \\u05DE\\u05DC\\u05D0\",\n    value: employeeName,\n    onChangeText: function onChangeText(text) {\n      return setEmployeeName(text);\n    },\n    style: styles.inputText,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"\\u05D2\\u05D9\\u05DC\",\n    value: employeeAge,\n    onChangeText: function onChangeText(text) {\n      return setEmployeeAge(text);\n    },\n    keyboardType: \"numeric\",\n    style: styles.inputText,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"\\u05E9\\u05DB\\u05E8\",\n    value: employeeSalary,\n    onChangeText: function onChangeText(text) {\n      return setEmployeeSalary(text);\n    },\n    keyboardType: \"numeric\",\n    style: styles.inputText,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8\",\n    onPress: onConfirmHandler,\n    name: \"loginBtn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.primary\n  },\n  addEmployeeModel: {\n    width: '80%',\n    height: '60%',\n    backgroundColor: 'white',\n    alignContent: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: Colors.lightGray,\n    backgroundColor: Colors.lightGray\n  },\n  title: {\n    fontSize: 20,\n    padding: 4\n  },\n  inputText: {\n    width: '80%',\n    height: 40,\n    backgroundColor: Colors.white,\n    borderRadius: 20,\n    margin: 12,\n    textAlign: 'center'\n  }\n});\nexport default EmployeeDetailsScreen;","map":{"version":3,"sources":["C:/Users/User/Documents/EmployeeManagement/screens/EmployeeDetailsScreen.js"],"names":["React","useState","useEffect","firebase","ExpoStatusBar","Facebook","Colors","EmployeeDetailsScreen","props","employeeName","setEmployeeName","employeeAge","setEmployeeAge","employeeSalary","setEmployeeSalary","employeeId","setEmployeeId","route","params","employee","currentEmployee","console","log","employee_name","employee_age","employee_salary","id","generateID","pre","Date","getTime","onConfirmHandler","Alert","alert","text","cancelable","onConfirm","navigation","goBack","styles","root","Keyboard","dismiss","addEmployeeModel","title","inputText","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","primary","width","height","alignContent","alignSelf","borderWidth","borderRadius","borderColor","lightGray","fontSize","padding","white","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Button, Pressable, Keyboard, Alert } from 'react-native';\r\nimport * as firebase from 'firebase';\r\nimport ExpoStatusBar from 'expo-status-bar/build/ExpoStatusBar';\r\nimport * as Facebook from 'expo-facebook';\r\n// import { Facebook } from \"expo\";\r\nimport Colors from '../constant/Colors';\r\n\r\nconst EmployeeDetailsScreen = props => {\r\n\r\n    const [employeeName, setEmployeeName] = useState('');\r\n    const [employeeAge, setEmployeeAge] = useState('');\r\n    const [employeeSalary, setEmployeeSalary] = useState('');\r\n    const [employeeId, setEmployeeId] = useState('');\r\n\r\n    useEffect(() => {\r\n        // console.log(\"props.route.params.employee\", props.route.params.employee);\r\n        if (props.route.params.employee) {\r\n            const currentEmployee = props.route.params.employee;\r\n            console.log(\"currentEmployee\", currentEmployee.employee_name);\r\n            setEmployeeName(currentEmployee.employee_name);\r\n            setEmployeeAge(currentEmployee.employee_age);\r\n            setEmployeeSalary(currentEmployee.employee_salary);\r\n            setEmployeeId(currentEmployee.id)\r\n        }\r\n    }, []);\r\n\r\n    const generateID = (pre) => {\r\n        return `${pre}_${new Date().getTime()}`;\r\n    }\r\n\r\n    const onConfirmHandler = async () => {\r\n        if (!employeeName || !employeeAge || !employeeSalary) {\r\n            return Alert.alert(\r\n                \"שגיאה\",\r\n                \"נא מלא את כל פרטי העובד\",\r\n                [\r\n                    { text: \"אישור\" }\r\n                ],\r\n                { cancelable: true }\r\n            )\r\n        }\r\n\r\n        // if new employee, generate id\r\n        if (!employeeId) {\r\n            let id = generateID(employeeName);\r\n            console.log(\"id\", id);\r\n            setEmployeeId(id);\r\n        }\r\n\r\n        const currentEmployee = {\r\n            employee_name: employeeName,\r\n            employee_age: employeeAge,\r\n            employee_salary: employeeSalary,\r\n            id: employeeId,\r\n        };\r\n\r\n        await props.route.params.onConfirm(currentEmployee);\r\n        props.navigation.goBack();\r\n    }\r\n\r\n    return (\r\n        <Pressable style={styles.root} onPress={() => { Keyboard.dismiss() }}>\r\n            <View style={styles.addEmployeeModel}>\r\n                <Text style={styles.title}>{props.route.params.title}</Text>\r\n                <TextInput placeholder='שם מלא' value={employeeName} onChangeText={text => setEmployeeName(text)} style={styles.inputText} autoCapitalize='none' ></TextInput>\r\n                <TextInput placeholder=\"גיל\" value={employeeAge} onChangeText={text => setEmployeeAge(text)} keyboardType=\"numeric\" style={styles.inputText} autoCapitalize='none'></TextInput>\r\n                <TextInput placeholder=\"שכר\" value={employeeSalary} onChangeText={text => setEmployeeSalary(text)} keyboardType=\"numeric\" style={styles.inputText} autoCapitalize='none'></TextInput>\r\n                <Button title='אישור' onPress={onConfirmHandler} name='loginBtn'></Button>\r\n                {/* <Button title='ביטול' onPress={() => onCancel ?? setModalVisible(false)} name='loginBtn'></Button> */}\r\n            </View>\r\n        </Pressable>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: Colors.primary,\r\n        // backgroundColor: '#dee2e6',\r\n\r\n    },\r\n    addEmployeeModel: {\r\n        width: '80%',\r\n        height: '60%',\r\n        backgroundColor: 'white',\r\n        alignContent: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        borderColor: Colors.lightGray,\r\n        backgroundColor: Colors.lightGray\r\n\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        padding: 4,\r\n    },\r\n    inputText: {\r\n        width: '80%',\r\n        height: 40,\r\n        backgroundColor: Colors.white,\r\n        borderRadius: 20,\r\n        margin: 12,\r\n        textAlign: 'center'\r\n    },\r\n});\r\n\r\nexport default EmployeeDetailsScreen;"]},"metadata":{},"sourceType":"module"}